{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/components/Login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport styled from 'styled-components';\nconst LOGIN_MUTATION = gql`\n    mutation LOGIN_USER($email: String!, $password: String!) {\n        loginUser(email: $email, password: $password) {\n            token\n        }\n    }\n`;\nconst ALL_USER_QUERY = gql`\n    query {\n        users {\n            id\n            fullName\n        }\n    }\n`;\nconst LoginForm = styled.form`\n    height: 800px;\n    border: 1px solid black;\n`;\nconst FormInput = styled.input`\n    height: 100px;\n    width: 80%;\n    border: 1px solid black;\n`;\nconst Button = styled.button`\n    background-color: blue;\n    border-radius: 10px;\n    height: 50px;\n    width: 100px;\n`;\n\nconst Login = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const [loginUser, {\n    data\n  }] = useMutation(LOGIN_MUTATION);\n  return __jsx(LoginForm, {\n    onSubmit: e => {\n      e.preventDefault();\n      loginUser({\n        variables: {\n          email,\n          password\n        }\n      });\n      setEmail('');\n      setPassword('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(FormInput, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(FormInput, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Log In\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/components/Login.js"],"names":["useState","useQuery","useMutation","gql","styled","LOGIN_MUTATION","ALL_USER_QUERY","LoginForm","form","FormInput","input","Button","button","Login","email","setEmail","password","setPassword","loginUser","data","e","preventDefault","variables","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,GAAhC,QAA2C,gBAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGF,GAAI;;;;;;CAA3B;AAQA,MAAMG,cAAc,GAAGH,GAAI;;;;;;;CAA3B;AASA,MAAMI,SAAS,GAAGH,MAAM,CAACI,IAAK;;;CAA9B;AAKA,MAAMC,SAAS,GAAGL,MAAM,CAACM,KAAM;;;;CAA/B;AAMA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAO;;;;;CAA7B;;AAOA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACkB,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAwBjB,WAAW,CAACG,cAAD,CAAzC;AAEA,SACI,MAAC,SAAD;AACI,IAAA,QAAQ,EAAEe,CAAC,IAAI;AACXA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,SAAS,CAAC;AAAEI,QAAAA,SAAS,EAAE;AAAER,UAAAA,KAAF;AAASE,UAAAA;AAAT;AAAb,OAAD,CAAT;AACAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,MAAC,SAAD;AACI,IAAA,KAAK,EAAEH,KADX;AAEI,IAAA,QAAQ,EAAEM,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACG,MAAF,CAASC,KAAV,CAF3B;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAcK,MAAC,SAAD;AACG,IAAA,KAAK,EAAER,QADV;AAEG,IAAA,QAAQ,EAAEI,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV,CAF7B;AAGG,IAAA,IAAI,EAAC,UAHR;AAIG,IAAA,WAAW,EAAC,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdL,EAqBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,CADJ;AAyBH,CAhCD;;AAkCA,eAAeX,KAAf","sourcesContent":["import { useState } from 'react'\nimport { useQuery ,useMutation, gql } from '@apollo/client'\nimport styled from 'styled-components'\n\nconst LOGIN_MUTATION = gql`\n    mutation LOGIN_USER($email: String!, $password: String!) {\n        loginUser(email: $email, password: $password) {\n            token\n        }\n    }\n`\n\nconst ALL_USER_QUERY = gql`\n    query {\n        users {\n            id\n            fullName\n        }\n    }\n`\n\nconst LoginForm = styled.form`\n    height: 800px;\n    border: 1px solid black;\n`\n\nconst FormInput = styled.input`\n    height: 100px;\n    width: 80%;\n    border: 1px solid black;\n`\n\nconst Button = styled.button`\n    background-color: blue;\n    border-radius: 10px;\n    height: 50px;\n    width: 100px;\n`\n\nconst Login = () => {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    \n    const [loginUser, { data }] = useMutation(LOGIN_MUTATION)\n\n    return (\n        <LoginForm \n            onSubmit={e => {\n                e.preventDefault()\n                loginUser({ variables: { email, password }})\n                setEmail('')\n                setPassword('')\n            }}\n            >\n            <FormInput\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                type=\"email\"\n                placeholder=\"Email\"\n            />\n             <FormInput\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                type=\"password\"\n                placeholder=\"password\"\n            />\n\n            <Button type=\"submit\">Log In</Button>\n        </LoginForm>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}