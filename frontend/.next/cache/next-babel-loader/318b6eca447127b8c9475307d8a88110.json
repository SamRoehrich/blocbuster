{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { ApolloProvider } from '@apollo/client';\nimport withData from '../lib/withData';\nimport Page from '../components/Page';\nconst theme = {\n  colors: {\n    primary: '#0070f3',\n    lightGrey: '#E1E1E1',\n    black: '#393939'\n  },\n  maxWidth: '1200px'\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apollo\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: apollo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js"],"names":["App","React","ThemeProvider","ApolloProvider","withData","Page","theme","colors","primary","lightGrey","black","maxWidth","MyApp","getInitialProps","Component","ctx","pageProps","query","render","apollo","props"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,SADH;AAENC,IAAAA,SAAS,EAAE,SAFL;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADI;AAMZC,EAAAA,QAAQ,EAAE;AANE,CAAd;;AASA,MAAMC,KAAN,SAAoBZ,GAApB,CAAwB;AACtB,eAAaa,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAGF,SAAS,CAACD,eAAb,EAA8B;AAC5BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAEDC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AAEA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBG,MAAAA;AAAxB,QAAmC,KAAKC,KAA9C;AACA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEb,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADF,CADF,CADF;AASD;;AAvBqB;;AA0BxB,eAAeZ,QAAQ,CAACQ,KAAD,CAAvB","sourcesContent":["import App from 'next/app'\nimport React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { ApolloProvider } from '@apollo/client'\nimport withData from '../lib/withData'\n\nimport Page from '../components/Page'\n\nconst theme = {\n  colors: {\n    primary: '#0070f3',\n    lightGrey: '#E1E1E1',\n    black: '#393939',\n  },\n  maxWidth: '1200px'\n}\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n    if(Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    pageProps.query = ctx.query\n\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps, apollo } = this.props\n    return (\n      <ApolloProvider client={apollo}>\n        <ThemeProvider theme={theme}>\n          <Page>\n              <Component {...pageProps} />\n          </Page>\n        </ThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withData(MyApp)"]},"metadata":{},"sourceType":"module"}