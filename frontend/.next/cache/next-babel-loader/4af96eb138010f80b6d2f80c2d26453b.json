{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { ApolloProvider } from '@apollo/client';\nimport withData from '../lib/withData';\nimport Page from '../components/Page';\nvar theme = {\n  colors: {\n    primary: '#0070f3',\n    lightGrey: '#E1E1E1',\n    black: '#393939'\n  },\n  maxWidth: '1200px'\n};\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apollo = _this$props.apollo;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              pageProps.query = ctx.query;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js"],"names":["App","React","ThemeProvider","ApolloProvider","withData","Page","theme","colors","primary","lightGrey","black","maxWidth","MyApp","props","Component","pageProps","apollo","ctx","getInitialProps","query"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,SADH;AAENC,IAAAA,SAAS,EAAE,SAFL;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADI;AAMZC,EAAAA,QAAQ,EAAE;AANE,CAAd;;IASMC,K;;;;;;;;;;;;;6BAYK;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,MADvB,eACuBA,MADvB;AAEP,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADF,CADF,CADF;AASD;;;;;;;;;AAtB8BD,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACpCF,cAAAA,S,GAAY,E;;mBACbD,SAAS,CAACI,e;;;;;;+CACOJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBF,cAAAA,S;;;AAGFA,cAAAA,SAAS,CAACI,KAAV,GAAkBF,GAAG,CAACE,KAAtB;+CAEO;AAAEJ,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EATSf,G;;AA0BpB,eAAeI,QAAQ,CAACQ,KAAD,CAAvB","sourcesContent":["import App from 'next/app'\nimport React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { ApolloProvider } from '@apollo/client'\nimport withData from '../lib/withData'\n\nimport Page from '../components/Page'\n\nconst theme = {\n  colors: {\n    primary: '#0070f3',\n    lightGrey: '#E1E1E1',\n    black: '#393939',\n  },\n  maxWidth: '1200px'\n}\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n    if(Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    pageProps.query = ctx.query\n\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps, apollo } = this.props\n    return (\n      <ApolloProvider client={apollo}>\n        <ThemeProvider theme={theme}>\n          <Page>\n              <Component {...pageProps} />\n          </Page>\n        </ThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withData(MyApp)"]},"metadata":{},"sourceType":"module"}