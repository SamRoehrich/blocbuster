{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/components/Signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//this component controlls the signup for any athlete or coach\n//arguments: fullName, email, password, team, keys\nimport { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport styled from 'styled-components';\nimport { ALL_TEAMS_QUERY } from '../lib/querys';\nimport Button from '../components/styled/Button';\nconst SignupForm = styled.form`\n    height: 90vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst Input = styled.input`\n    width: 80%;\n    font-size: 1.8rem;\n    cursor: pointer;\n\n    &:active {\n        text-decoration: none;\n    }\n`;\n\nconst Signup = () => {\n  const {\n    loading,\n    data\n  } = useQuery(ALL_TEAMS_QUERY);\n  const {\n    0: fullName,\n    1: setFullName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  const {\n    0: teamId,\n    1: setTeamId\n  } = useState('');\n  const {\n    0: teamKey,\n    1: setTeamKey\n  } = useState('');\n  const {\n    0: coachKey,\n    1: setCoachKey\n  } = useState('');\n  console.log(data.getAllTeams.map(team => team.teamName));\n  return __jsx(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Join your team\"), __jsx(\"select\", {\n    required: true,\n    id: \"teams\",\n    value: team,\n    onChange: e => setTeam(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, data.getAllTeams.map(team => __jsx(\"option\", {\n    key: team.id,\n    value: team.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, team.teamName))), __jsx(Input, {\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    type: \"text\",\n    placeholder: \"Full Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"Email Address\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    placeholder: \"Enter password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: teamKey,\n    onChange: e => setTeamKey(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Team Key\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Sign up!\"));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/components/Signup.js"],"names":["useState","useQuery","useMutation","gql","styled","ALL_TEAMS_QUERY","Button","SignupForm","form","Input","input","Signup","loading","data","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","teamId","setTeamId","teamKey","setTeamKey","coachKey","setCoachKey","console","log","getAllTeams","map","team","teamName","e","setTeam","target","value","id"],"mappings":"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","sourcesContent":["//this component controlls the signup for any athlete or coach\n//arguments: fullName, email, password, team, keys\n\nimport { useState } from 'react'\nimport { useQuery ,useMutation, gql } from '@apollo/client'\nimport styled from 'styled-components'\n\nimport { ALL_TEAMS_QUERY } from '../lib/querys'\n\nimport Button from '../components/styled/Button'\n\nconst SignupForm = styled.form`\n    height: 90vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Input = styled.input`\n    width: 80%;\n    font-size: 1.8rem;\n    cursor: pointer;\n\n    &:active {\n        text-decoration: none;\n    }\n`\n\nconst Signup = () => {\n\n    const { loading, data } = useQuery(ALL_TEAMS_QUERY)\n    const [ fullName, setFullName ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ confirmPassword, setConfirmPassword ] = useState('')\n    const [ teamId, setTeamId ] = useState('')\n    const [ teamKey, setTeamKey ] = useState('')\n    const [ coachKey, setCoachKey ] = useState('')\n\n    console.log(data.getAllTeams.map((team) => (\n        team.teamName\n    )))\n\n    return (\n        <SignupForm>\n            <p>Join your team</p>\n            <select required id='teams' value={team} onChange ={e => setTeam(e.target.value)}>\n                {\n                    data.getAllTeams.map(team => (\n                        <option key={team.id} value={team.id}>{team.teamName}</option>\n                    ))\n                }\n            </select>\n            <Input \n                value={fullName}\n                onChange={e => setFullName(e.target.value)}\n                type='text'\n                placeholder='Full Name'\n                required\n            />\n\n            <Input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                type='email'\n                placeholder='Email Address'\n                required\n            />\n\n            <Input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                type='password'\n                placeholder='Enter password'\n                required\n            />\n\n            <Input\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                type='password'\n                placeholder='Confirm password'\n                required\n            />\n\n            <Input \n                value={teamKey}\n                onChange={e => setTeamKey(e.target.value)}\n                type='text'\n                placeholder='Enter Team Key'\n                required\n            />\n            <Button>Sign up!</Button>\n        </SignupForm>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}