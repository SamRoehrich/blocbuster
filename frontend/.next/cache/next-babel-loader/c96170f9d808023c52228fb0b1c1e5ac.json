{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/components/Signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//this component controlls the signup for any athlete or coach\n//arguments: fullName, email, password, team, keys\nimport { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport { ALL_TEAMS_QUERY } from '../lib/querys';\nimport Button from '../components/styled/Button';\nconst SignupForm = styled.form`\n    height: 90vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\nconst Input = styled.input`\n    width: 80%;\n    font-size: 1.8rem;\n    cursor: pointer;\n\n    &:active {\n        text-decoration: none;\n    }\n`;\n\nconst Signup = () => {\n  const {\n    loading,\n    data\n  } = useQuery(ALL_TEAMS_QUERY);\n  const {\n    0: fullName,\n    1: setFullName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState('');\n  const {\n    0: phoneNumber,\n    1: setPhoneNumber\n  } = useState('');\n  const {\n    0: dob,\n    1: setDob\n  } = useState('');\n  const {\n    0: teamId,\n    1: setTeamId\n  } = useState('');\n  const {\n    0: teamKey,\n    1: setTeamKey\n  } = useState('');\n  const {\n    0: coachKey,\n    1: setCoachKey\n  } = useState('');\n  const {\n    getAllTeams\n  } = data;\n  return __jsx(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Join your team\"), __jsx(\"select\", {\n    name: \"team\",\n    onChange: setTeamId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, getAllTeams.map(team => __jsx(\"option\", {\n    key: team.id,\n    value: team.teamId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, team.teamName))), __jsx(Input, {\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    type: \"text\",\n    placeholder: \"Full Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"email\",\n    placeholder: \"Email Address\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: dob,\n    onChange: e => setDob(e.target.value),\n    type: \"text\",\n    placeholder: \"Date of Birth (mm/dd/yyyy)\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    type: \"text\",\n    placeholder: \"Phone number (xxx-xxx-xxxx)\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    placeholder: \"Enter password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: teamKey,\n    onChange: e => setTeamKey(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter Team Key\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    value: coachKey,\n    onChange: e => setCoachKey(e.target.value),\n    type: \"text\",\n    placeholder: \"Enter the coach key (Optional: Requried for coaches to get proper access)\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Sign up!\"));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/components/Signup.js"],"names":["useState","useQuery","useMutation","gql","styled","ALL_TEAMS_QUERY","Button","SignupForm","form","Input","input","Signup","loading","data","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","dob","setDob","teamId","setTeamId","teamKey","setTeamKey","coachKey","setCoachKey","getAllTeams","map","team","id","teamName","e","target","value"],"mappings":"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","sourcesContent":["//this component controlls the signup for any athlete or coach\n//arguments: fullName, email, password, team, keys\n\nimport { useState } from 'react'\nimport { useQuery ,useMutation, gql } from '@apollo/react-hooks'\nimport styled from 'styled-components'\n\nimport { ALL_TEAMS_QUERY } from '../lib/querys'\n\nimport Button from '../components/styled/Button'\n\nconst SignupForm = styled.form`\n    height: 90vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst Input = styled.input`\n    width: 80%;\n    font-size: 1.8rem;\n    cursor: pointer;\n\n    &:active {\n        text-decoration: none;\n    }\n`\n\nconst Signup = () => {\n\n    const { loading, data } = useQuery(ALL_TEAMS_QUERY)\n    const [ fullName, setFullName ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ confirmPassword, setConfirmPassword ] = useState('')\n    const [ phoneNumber, setPhoneNumber ] = useState('')\n    const [ dob, setDob ] = useState('')\n    const [ teamId, setTeamId ] = useState('')\n    const [ teamKey, setTeamKey ] = useState('')\n    const [ coachKey, setCoachKey ] = useState('')\n\n    const { getAllTeams } = data\n    return (\n        <SignupForm>\n            <p>Join your team</p>\n\n            {  \n                <select name=\"team\" onChange={setTeamId}>\n                    {getAllTeams.map(team => (\n                        <option key={team.id} value={team.teamId}>\n                            {team.teamName}\n                        </option>\n                    ))}\n                </select> \n            }\n            <Input \n                value={fullName}\n                onChange={e => setFullName(e.target.value)}\n                type='text'\n                placeholder='Full Name'\n                required\n            />\n\n            <Input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                type='email'\n                placeholder='Email Address'\n                required\n            />\n\n            <Input\n                value={dob}\n                onChange={e => setDob(e.target.value)}\n                type='text'\n                placeholder='Date of Birth (mm/dd/yyyy)'\n                required\n            />\n\n            <Input\n                value={phoneNumber}\n                onChange={e => setPhoneNumber(e.target.value)}\n                type='text'\n                placeholder='Phone number (xxx-xxx-xxxx)'\n                required\n            />\n\n            <Input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                type='password'\n                placeholder='Enter password'\n                required\n            />\n\n            <Input\n                value={confirmPassword}\n                onChange={e => setConfirmPassword(e.target.value)}\n                type='password'\n                placeholder='Confirm password'\n                required\n            />\n\n            <Input \n                value={teamKey}\n                onChange={e => setTeamKey(e.target.value)}\n                type='text'\n                placeholder='Enter Team Key'\n                required\n            />\n\n            <Input \n                value={coachKey}\n                onChange={e => setCoachKey(e.target.value)}\n                type='text'\n                placeholder='Enter the coach key (Optional: Requried for coaches to get proper access)'\n                required\n            />          \n            <Button>Sign up!</Button>\n        </SignupForm>\n    )\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}