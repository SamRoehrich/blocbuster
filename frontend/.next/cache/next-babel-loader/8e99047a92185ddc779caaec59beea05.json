{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from 'next-with-apollo';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo;\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default withApollo(function (_ref2) {\n  var initialState = _ref2.initialState;\n  return new ApolloClient({\n    uri: 'http://localhost:4444',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(App);","map":{"version":3,"sources":["/Users/sam/Desktop/playground/blocBuster/frontend/pages/_app.js"],"names":["withApollo","ApolloClient","ApolloProvider","InMemoryCache","App","Component","pageProps","apollo","initialState","uri","cache","restore"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,MAAyBC,MAAzB,QAAyBA,MAAzB;AAAA,SACR,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADQ;AAAA,CAAZ;;AAMA,eAAeN,UAAU,CAAC,iBAAsB;AAAA,MAAnBQ,YAAmB,SAAnBA,YAAmB;AAC5C,SAAO,IAAIP,YAAJ,CAAiB;AACtBQ,IAAAA,GAAG,EAAE,uBADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIP,aAAJ,GAAoBQ,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CALsB,CAAV,CAKVJ,GALU,CAAf","sourcesContent":["import withApollo from 'next-with-apollo'\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\n\nconst App = ({ Component, pageProps, apollo }) => (\n    <ApolloProvider client={apollo}>\n        <Component {...pageProps} />\n    </ApolloProvider>\n)\n\nexport default withApollo(({ initialState }) => {\n    return new ApolloClient({\n      uri: 'http://localhost:4444',\n      cache: new InMemoryCache().restore(initialState || {}),\n    })\n  })(App)"]},"metadata":{},"sourceType":"module"}