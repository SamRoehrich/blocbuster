enum USER_TYPE {
    ATHLETE
    COACH
    HEAD_COACH
    PARENT
}

type User {
    id: ID! @id
    fullName: String!
    userType: USER_TYPE
    createdAt: DateTime @createdAt
    athlete: Athlete @relation(link: INLINE, name: "UserOnAthlete")
    coach: Coach @relation(link: INLINE, name: "UserOnCoach")
    parent: Parent @relation(link: INLINE, name: "UserOnParent")
    headCoach: HeadCoach @relation(link: INLINE, name: "UserOnHeadCoach")
    email: String! @unique
    password: String!
    team: Team @relation(link: INLINE)
    phoneNumber: String!
    posts: [Post!]
}

type Team {
    id: ID! @id
    teamName: String! @unique
    headCoach: HeadCoach @relation (link: INLINE)
    athletes: [Athlete!] @relation(link: TABLE)
    coahces: [Coach!] @relation(link: TABLE)
    subTeams: [SubTeam!]
    library: [Workout!]
    posts: [Post!]
    schedule: TeamSchedule @relation(link: INLINE)
    phase: String
    city: String!
    state: String!
    homeGym: String!
    teamKey: String
    coachKey: String
}

type TeamSchedule {
    id: ID! @id
    createdBy: Coach
    createdAt: DateTime! @createdAt
    team: Team
    athletes: [Athlete!]
    library: [Workout!]
}

type AthleteSchedule {
    id: ID! @id
    createdBy: User! 
    createdAt: DateTime! @createdAt
    library: [Workout!]
    athlete: Athlete! @relation(name: "AthleteOnSchedule")
}

type SubTeam {
    id: ID! @id
    headCoach: HeadCoach! 
    ahtletes: [Athlete!]
    coahces: [Coach!]
    library: [Workout!]
    posts: [Post!]
}

type HeadCoach {
    id: ID! @id
    user: User @relation(name: "UserOnHeadCoach")
}

type Coach {
    id: ID! @id
    user: User @relation(name: "UserOnCoach")
}

type Athlete {
    id: ID! @id
    user: User @relation(name: "UserOnAthlete")
    athleteStats: AthleteStats @relation(link: INLINE, name: "AthleteOnStats")
    athleteSchedule: AthleteSchedule @relation(link: INLINE, name:"AthleteOnSchedule")
    teamSchedule: TeamSchedule
    logBook: [LogItem!]
    phase: String
}

type Parent {
    id: ID! @id
    user: User @relation(name: "UserOnParent")
    athlete: Athlete @relation(name: "ParentOnAthlete")
}

type LogItem {
    user: User!
    id: ID! @id
    createdAt: DateTime! @createdAt
    title: String!
    description: String!
    results: Result!
    comment: String
}

type Result {
    id: ID! @id
    rpe: Int
    compResult: Int
    sessionResult: String
    athlete: Athlete!
}

type AthleteStats {
    id: ID! @id
    athlete: Athlete! @relation(name: "AthleteOnStats")
    createdAt: DateTime! @createdAt
    apeIndex: Int!
    height: Int!
    weight: Int!
    maxVGrade: Int!
    maxSportGrade: String!
    maxEdgeLoad: Int!
    maxEdgeTestSize: Int!
    SWREdge: Float
    maxPullLoad: Int!
    SWRBar: Float
    oneArmHangLoadLeft: Int!
    oneArmHangLoadRight: Int!
    oneArmHangSWR: Float!
    goalVGrade: Int!
    goalSportGrade: String!
}

type Post {
    id: ID! @id
    postedBy: User!
    title: String!
    content: String!
    comments: [Comment!]
}

type Comment {
    id: ID! @id
    post: Post!
    coach: Coach
    athlete: Athlete
    content: String!
}

type Workout {
    id: ID! @id
    author: String!
    title: String!
    description: String!
}